<UserControl x:Class="Microsoft.Data.Visualization.VisualizationControls.TourPlayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Microsoft.Data.Visualization.VisualizationControls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:wpfEx="clr-namespace:Microsoft.Data.Visualization.WpfExtensions;assembly=WpfExtensions"
             Content="{Binding}">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <x:Static Member="local:ChromelessWindowBase.StaticallyThemedTemplatesDictionary"/>
                <ResourceDictionary Source="..\Styles\ChromeButtonStyles.xaml"/>
                <ResourceDictionary Source="..\Styles\PlaybackControlStyles.xaml"/>
                <ResourceDictionary Source="..\Styles\Converters.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <sys:Double x:Key="ControlsOverlayHeight">40</sys:Double>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <ContentControl.ContentTemplate>
        <DataTemplate>
            <DataTemplate.Triggers>
                <DataTrigger Value="True" Binding="{Binding ControlsVisible}">
                    <TriggerBase.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Height" Storyboard.TargetName="PlayerControlsOverlayContainer"
                                 To="{StaticResource ControlsOverlayHeight}" Duration="0:0:0.35"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </TriggerBase.EnterActions>
                    <TriggerBase.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Height" Storyboard.TargetName="PlayerControlsOverlayContainer" To="1"
                                 Duration="0:0:0.35"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </TriggerBase.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="DisplayOverlay" Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                   Fill="Transparent">
                    <UIElement.Visibility>
                        <MultiBinding Converter="{StaticResource CollapsedIfTrueMultiBooleanToVisibilityAllConverter}">
                            <Binding Path="ControlsVisible"/>
                            <Binding Path="OptionsVisible" Converter="{StaticResource InvertBoolConverter}"/>
                        </MultiBinding>
                    </UIElement.Visibility>
                </Rectangle>
                <Grid x:Name="OptionsControl" Background="White" HorizontalAlignment="Right" VerticalAlignment="Bottom"
              Row="0" MinWidth="250" MinHeight="60"
              Visibility="{Binding OptionsVisible, Converter={StaticResource CollapsedIfFalseConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Border BorderThickness="1" BorderBrush="Black" Background="Transparent"/>
                    <ToggleButton Grid.Row="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"
                        Margin="6,6,6,6" Padding="6,6,6,6" FontWeight="Bold" FontSize="14" FontStyle="Normal"
                        ToolTip="{x:Static local:Resources.TourPlayer_RefreshTooltip}"
                        IsChecked="{Binding IsRefreshEnabled}">
                        <ContentControl.Content>
                            <MultiBinding Converter="{StaticResource IfThenElseConverter}" Mode="OneWay">
                                <Binding Path="IsRefreshEnabled"/>
                                <Binding Source="{x:Static local:Resources.TourPlayer_RefreshOn}"/>
                                <Binding Source="{x:Static local:Resources.TourPlayer_RefreshOff}"/>
                            </MultiBinding>
                        </ContentControl.Content>
                        <FrameworkElement.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0"
                              Background="{TemplateBinding Control.Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Control.Padding}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="ButtonBase.IsPressed" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Control.Background" Value="{StaticResource PressedPlaybackControlColor}"/>
                                        <Setter Property="Control.Foreground" Value="{StaticResource ActivePlaybackControlColor}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                            <Condition Property="ButtonBase.IsPressed" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Control.Background" Value="{StaticResource InactivePlaybackControlColor}"/>
                                        <Setter Property="Control.Foreground" Value="{StaticResource PressedPlaybackControlColor}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="UIElement.IsMouseOver" Value="false"/>
                                            <Condition Property="ButtonBase.IsPressed" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Control.Background" Value="{StaticResource ActivePlaybackControlColor}"/>
                                        <Setter Property="Control.Foreground" Value="{StaticResource PressedPlaybackControlColor}"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </FrameworkElement.Style>
                    </ToggleButton>
                </Grid>
                <Grid RowSpan="2" Background="Transparent"
              Visibility="{Binding TourPlayer.IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <ContentControl x:Name="PlayerControlsOverlayContainer" VerticalAlignment="Bottom" Grid.Row="1"
                        Height="{StaticResource ControlsOverlayHeight}" HorizontalAlignment="Stretch"
                        KeyboardNavigation.IsTabStop="false">
                    <Grid x:Name="PlayerControlsOverlay" Height="{StaticResource ControlsOverlayHeight}"
                HorizontalAlignment="Stretch">
                        <FrameworkElement.Resources>
                            <Thickness x:Key="ButtonMargin">10 0 10 0</Thickness>
                        </FrameworkElement.Resources>
                        <Rectangle Opacity="0.5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="Black"/>
                        <Button x:Name="ExitTourPlaybackModeButton" Style="{StaticResource BackButtonStyle}"
                    KeyboardNavigation.TabIndex="4" VerticalAlignment="Center" HorizontalAlignment="Left"
                    Margin="{StaticResource ButtonMargin}" ToolTip="{x:Static local:Resources.TourPlayer_BackTooltip}"
                    Command="{Binding ExitTourPlaybackModeCommand}"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center"
                        FlowDirection="LeftToRight">
                            <Button x:Name="PreviousSceneButton" KeyboardNavigation.TabIndex="5"
                      Style="{StaticResource PreviousButtonStyle}" Margin="{StaticResource ButtonMargin}"
                      ToolTip="{x:Static local:Resources.TourPlayer_PreviousSceneTooltip}"
                      Command="{Binding PreviousSceneCommand}" IsEnabled="{Binding IsPreviousEnabled}"/>
                            <Button x:Name="PlayButton" KeyboardNavigation.TabIndex="1" Style="{StaticResource PlayButtonStyle}"
                      Margin="{StaticResource ButtonMargin}" ToolTip="{x:Static local:Resources.TourPlayer_PlayTooltip}"
                      Command="{Binding PlayCommand}"
                      Visibility="{Binding Path=TourPlayer.IsPlaying, Converter={StaticResource CollapsedIfTrueConverter}}"/>
                            <Button Name="PauseButton" KeyboardNavigation.TabIndex="2" Style="{StaticResource PauseButtonStyle}"
                      Margin="{StaticResource ButtonMargin}" ToolTip="{x:Static local:Resources.TourPlayer_PauseTooltip}"
                      Command="{Binding PauseCommand}"
                      Visibility="{Binding Path=TourPlayer.IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <Button x:Name="NextSceneButton" KeyboardNavigation.TabIndex="3" Style="{StaticResource NextButtonStyle}"
                      Margin="{StaticResource ButtonMargin}"
                      ToolTip="{x:Static local:Resources.TourPlayer_NextSceneTooltip}"
                      Command="{Binding NextSceneCommand}" IsEnabled="{Binding IsNextEnabled}"/>
                            <ToggleButton x:Name="LoopButton" KeyboardNavigation.TabIndex="4" Style="{StaticResource LoopButtonStyle}"
                            Margin="{StaticResource ButtonMargin}" IsChecked="{Binding IsLoopingEnabled}">
                                <FrameworkElement.ToolTip>
                                    <MultiBinding Converter="{StaticResource IfThenElseConverter}" Mode="OneWay">
                                        <Binding Path="IsLoopingEnabled"/>
                                        <Binding Source="{x:Static local:Resources.TourPlayer_LoopRepeatOffTooltip}"/>
                                        <Binding Source="{x:Static local:Resources.TourPlayer_LoopRepeatOnTooltip}"/>
                                    </MultiBinding>
                                </FrameworkElement.ToolTip>
                            </ToggleButton>
                        </StackPanel>
                        <Button x:Name="OptionsButton" KeyboardNavigation.TabIndex="6" Style="{StaticResource OptionsButtonStyle}"
                    Margin="{StaticResource ButtonMargin}"
                    ToolTip="{x:Static local:Resources.TourPlayer_PlaybackOptionsTooltip}" HorizontalAlignment="Right"
                    VerticalAlignment="Center"/>
                    </Grid>
                </ContentControl>
                <Rectangle x:Name="PlayerControlsHoverArea" Grid.Row="1" VerticalAlignment="Stretch"
                   HorizontalAlignment="Stretch" Fill="Transparent" Height="{StaticResource ControlsOverlayHeight}"
                   Visibility="{Binding ControlsVisible, Converter={StaticResource CollapsedIfTrueConverter}}"/>
            </Grid>
        </DataTemplate>
    </ContentControl.ContentTemplate>
</UserControl>