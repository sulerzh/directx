<UserControl x:Class="Microsoft.Data.Visualization.VisualizationControls.FieldWellGeographyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Microsoft.Data.Visualization.VisualizationControls"
             xmlns:wpfEx="clr-namespace:Microsoft.Data.Visualization.WpfExtensions;assembly=WpfExtensions"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Styles\Includes.xaml"/>
                <ResourceDictionary Source="..\Styles\RedlineBase.xaml"/>
                <ResourceDictionary Source="..\Styles\FieldListStyles.xaml"/>
                <ResourceDictionary Source="..\Styles\ChromeButtonBaseStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource FieldPanelSpacerGridHeight}"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Text="{x:Static local:Resources.FieldWellGeography_TitleText}"
               Style="{StaticResource SectionHeaderTextStyle}"/>
        <Border Grid.Row="2" BorderThickness="1" BorderBrush="{StaticResource MetroGray3}">
            <ScrollViewer MinHeight="48" VerticalScrollBarVisibility="Auto" Background="{DynamicResource MetroBackground}"
                    AutomationProperties.AutomationId="GeographyMapLevelScrollViewer">
                <ItemsControl Margin="4" BorderBrush="Gray" KeyboardNavigation.IsTabStop="false"
                      Style="{StaticResource FieldWellPlaceholderTextItemsControlStyle}"
                      ItemsSource="{Binding GeoFieldMappings}"
                      wpfEx:DragDropHelper.DropHandler="{Binding GeoFieldMappingsDropHandler}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="local:GeoFieldMappingViewModel">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto" MinWidth="120"/>
                                </Grid.ColumnDefinitions>
                                <Grid Column="0" Margin="0 6.25">
                                    <RadioButton VerticalAlignment="Bottom" Margin="{StaticResource NormalTextBaselineMargin}" Grid.Column="0"
                               IsChecked="{Binding IsMapByField}"
                               IsEnabled="{Binding DataContext.IsSettingMapByFieldEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:FieldWellGeographyView}}}">
                                        <TextBlock Style="{StaticResource NormalTextStyle}" Background="{DynamicResource MetroBackground}"
                               TextTrimming="CharacterEllipsis" Text="{Binding DisplayString}" ToolTip="{Binding DisplayString}"/>
                                    </RadioButton>
                                </Grid>
                                <ComboBox Grid.Column="1" VerticalAlignment="Bottom" BorderBrush="White"
                          ItemContainerStyle="{StaticResource ComboBoxItemSeparatorStyle}"
                          ToolTip="{x:Static local:Resources.FieldListPicker_GeographyTypeTooltip}"
                          AutomationProperties.AutomationId="GeographyPickerComboBox" ItemsSource="{Binding DropDownOptions}"
                          SelectedItem="{Binding SelectedOption}"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="FrameworkElement.Margin" Value="4 0.75"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </ScrollViewer>
        </Border>
        <Grid Row="3" HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="2" Margin="10,10,0,0"
              Content="{x:Static local:Resources.FieldWellGeography_NextButtonText}"
              ToolTip="{x:Static local:Resources.FieldListPicker_NextTooltip}"
              AutomationProperties.AutomationId="MapByNextButton" Command="{Binding NextCommand}">
                <FrameworkElement.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Control.IsTabStop" Value="true"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DisplayedErrorMessage, Converter={StaticResource VisibleIfNotNullConverter}}"
                           Value="Visible">
                                <Setter Property="Control.IsTabStop" Value="false"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsBackgroundPromptApplicable}" Value="True">
                                <Setter Property="Control.IsTabStop" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </FrameworkElement.Style>
            </Button>
        </Grid>
        <Grid Row="3" MaxWidth="320" VerticalAlignment="Bottom" RowSpan="2"
          Background="{DynamicResource InsetBackground}"
          Visibility="{Binding IsBackgroundPromptApplicable, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            <Grid Row="0" Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource InsetHeaderTextStyle}"
                   VerticalAlignment="Center" Text="{x:Static local:Resources.FieldWellGeography_CustomMap_Header}"/>
                <Button Grid.Row="0" Grid.Column="1"
                ToolTip="{x:Static local:Resources.FieldWellGeography_CustomMap_NoTooltip}"
                Style="{DynamicResource ChromeCloseButton}" MinWidth="20"
                Command="{Binding BackgroundChangeNoCommand}"/>
                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                   Text="{x:Static local:Resources.FieldWellGeography_CustomMap_Tooltip}"
                   Style="{StaticResource NormalTextStyle}"/>
            </Grid>
            <Grid Row="1" Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="1" Content="{x:Static local:Resources.FieldWellGeography_CustomMap_Yes}"
                ToolTip="{x:Static local:Resources.FieldWellGeography_CustomMap_YesTooltip}"
                Style="{DynamicResource BorderlessButton}" MinWidth="20" Margin="9,0,0,6"
                Command="{Binding BackgroundChangeYesCommand}"/>
                <Button Grid.Column="2" Content="{x:Static local:Resources.FieldWellGeography_CustomMap_No}"
                ToolTip="{x:Static local:Resources.FieldWellGeography_CustomMap_NoTooltip}"
                Style="{DynamicResource BorderlessButton}" MinWidth="20" Margin="9,0,0,6"
                Command="{Binding BackgroundChangeNoCommand}"/>
            </Grid>
        </Grid>
        <Grid Row="3" MaxWidth="320" VerticalAlignment="Bottom" RowSpan="2"
          Background="{DynamicResource InsetBackground}"
          Visibility="{Binding DisplayedErrorMessage, Converter={StaticResource VisibleIfNotNullConverter}}">
            <Grid Margin="6" wpfEx:GridEx.ColDefs="*,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{StaticResource PanelSectionCompactSpacerGridHeight}"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{x:Static local:Resources.FieldListPicker_FieldListErrorHeader}"
                   Style="{StaticResource InsetHeaderTextStyle}" Grid.Row="0" Grid.Column="0"/>
                <Button Style="{StaticResource ChromeCloseButton}" Margin="-10" HorizontalAlignment="Right"
                VerticalAlignment="Top" Grid.Row="0" Grid.Column="1"
                AutomationProperties.AutomationId="FieldListErrorCloseButton"
                AutomationProperties.Name="{x:Static local:Resources.Narrator_Close}"
                AutomationProperties.HelpText="{x:Static local:Resources.NarratorFieldListError_Close}"
                Command="{Binding DismissErrorCommand}"/>
                <TextBlock TextWrapping="Wrap" Grid.Row="2" Grid.ColumnSpan="2"
                   AutomationProperties.AutomationId="FieldListErrorTextBlock"
                   AutomationProperties.Name="{x:Static local:Resources.NarratorFieldListError}"
                   Text="{Binding DisplayedErrorMessage}"
                   AutomationProperties.HelpText="{Binding DisplayedErrorMessage}"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>