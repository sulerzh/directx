<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Microsoft.Data.Visualization.VisualizationControls;assembly=VisualizationControl"
                    xmlns:wpfEx="clr-namespace:Microsoft.Data.Visualization.WpfExtensions;assembly=WpfExtensions">
  <ResourceDictionary.MergedDictionaries>
    <x:Static Member="local:ChromelessWindowBase.MainThemeDictionary"/>
  </ResourceDictionary.MergedDictionaries>
  <GridLength x:Key="ComboBoxArrowColumnWidth">15</GridLength>
  <Geometry x:Key="DownArrowGeometry">
    M 0 0 L 3.5 4 L 7 0 Z
  </Geometry>
  <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="false"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="BttnBorder" Background="{DynamicResource MetroBackground}" BorderBrush="Transparent"
                  BorderThickness="1">
            <Grid HorizontalAlignment="Right">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource ComboBoxArrowColumnWidth}"/>
              </Grid.ColumnDefinitions>
              <Path x:Name="Arrow" Grid.Column="0" Data="{StaticResource DownArrowGeometry}"
                    Fill="{DynamicResource ComboBoxArrows}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="BttnBorder" Value="{DynamicResource MetroPressedGreen}" Property="Border.Background"/>
              <Setter TargetName="Arrow" Value="{DynamicResource MetroText}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Value="{DynamicResource MetroInactiveGray}" Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="BttnBorder" Background="{DynamicResource MetroBackground}" Padding="4"
                  BorderThickness="0,1,1,1" BorderBrush="{DynamicResource CheckBoxFrames}">
            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="{DynamicResource ComboBoxArrows}"
                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="BttnBorder" Value="{DynamicResource MetroPressedGreen}" Property="Border.Background"/>
              <Setter TargetName="Arrow" Value="{DynamicResource MetroText}" Property="Shape.Fill"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="BttnBorder" Value="{DynamicResource MetroHoverGreen}" Property="Border.Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="BttnBorder" Value="{DynamicResource MetroPressedGreen}" Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="BttnBorder" Value="{DynamicResource MetroAppButtonHoverGreen}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Value="{DynamicResource MetroInactiveGray}" Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                        HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="Placement" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="1"/>
        <ColumnDefinition Width="{StaticResource ComboBoxArrowColumnWidth}"/>
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
             Placement="Bottom"
             IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource CheckBoxFrames}" BorderThickness="1"
                Background="{DynamicResource MetroBackground}"
                MinWidth="{Binding ActualWidth, ElementName=Placement}">
          <ScrollViewer x:Name="DropDownScrollViewer">
            <Grid RenderOptions.ClearTypeHint="Enabled">
              <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                           Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                           Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
              </Canvas>
              <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Grid>
          </ScrollViewer>
        </Border>
      </Popup>
      <TextBox x:Name="PART_EditableTextBox"
               HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
               Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
               VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
               IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
      <ToggleButton Grid.Column="1" Style="{StaticResource ComboBoxToggleButton}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Border x:Name="Border" BorderThickness="1" Grid.ColumnSpan="3"
              BorderBrush="{DynamicResource CheckBoxFrames}"/>
      <Border x:Name="Border2" Grid.Column="1" BorderThickness="0,0,1,0" BorderBrush="Transparent"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
        <Setter Value="{DynamicResource MetroText}" Property="Control.Foreground"/>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter TargetName="Border" Value="{DynamicResource MetroAppButtonHoverGreen}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="Border2" Value="{DynamicResource MetroAppButtonHoverGreen}"
                Property="Border.BorderBrush"/>
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="false">
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Value="{DynamicResource MetroInactiveGray}" Property="Control.Foreground"/>
        <Setter Value="{DynamicResource MetroBackground}" Property="Control.Background"/>
      </Trigger>
      <Trigger Property="ItemsControl.IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                Property="Canvas.Top"/>
        <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                Property="Canvas.Left"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type Hyperlink}">
    <Setter Property="wpfEx:FocusHelper.ActivateOnEnterOrSpacebar" Value="true"/>
  </Style>
  <Style TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.Height" Value="23"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource MetroText}"/>
    <Setter Property="Control.Background" Value="{DynamicResource MetroBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource CheckBoxFrames}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Padding" Value="4,3"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource ListBoxItemStyle1}"/>
    <Setter Property="wpfEx:FocusHelper.ActivateOnEnterOrSpacebar" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Width="{StaticResource ComboBoxArrowColumnWidth}"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource CheckBoxFrames}" BorderThickness="1"
                      Background="{DynamicResource MetroBackground}"
                      MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                <ScrollViewer x:Name="DropDownScrollViewer">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                      <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                                 Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                 Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  </Grid>
                </ScrollViewer>
              </Border>
            </Popup>
            <ToggleButton x:Name="ToggleButton1" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="3"
                          Style="{StaticResource ComboBoxReadonlyToggleButton}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                              Margin="{TemplateBinding Control.Padding}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            <Border x:Name="LargeBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1"
                    Grid.ColumnSpan="3"/>
            <Border x:Name="SmallBorder" BorderBrush="Transparent" Grid.Column="1" BorderThickness="1,0,0,0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource MetroInactiveGray}" Property="Control.Foreground"/>
              <Setter Value="{DynamicResource MetroBackground}" Property="Control.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="LargeBorder" Value="{DynamicResource MetroAppButtonHoverGreen}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="SmallBorder" Value="{DynamicResource MetroAppButtonHoverGreen}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                      Property="Canvas.Top"/>
              <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                      Property="Canvas.Left"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource MetroBackground}"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="Control.Padding" Value="3"/>
        <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>