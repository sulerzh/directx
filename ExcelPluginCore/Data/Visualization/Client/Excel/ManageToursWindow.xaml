<Window x:Class="Microsoft.Data.Visualization.Client.Excel.ManageToursWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        xmlns:viscontrol="clr-namespace:Microsoft.Data.Visualization.VisualizationControls;assembly=VisualizationControl"
        xmlns:local="clr-namespace:Microsoft.Data.Visualization.Client.Excel"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        KeyDown="ManageToursMainWindow_KeyDown" x:Name="ManageToursMainWindow" Height="480" MinWidth="340"
        Width="340" WindowStartupLocation="CenterScreen" Style="{DynamicResource MainWindowStyle}"
        ResizeMode="CanResizeWithGrip" Title="{x:Static local:Resources.ManageDialogTitle}" MaxWidth="640"
        MaxHeight="480">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <x:Static Member="viscontrol:ChromelessWindowBase.StaticallyThemedTemplatesDictionary"/>
                <ResourceDictionary Source="/VisualizationControl;component/Styles/ChromeButtonStyles.xaml"/>
                <ResourceDictionary Source="/VisualizationControl;component/Styles/Converters.xaml"/>
                <ResourceDictionary Source="/VisualizationControl;component/Styles/DefaultTemplateBindings.xaml"/>
                <ResourceDictionary Source="/VisualizationControl;component/Styles/MetroRibbon.xaml"/>
                <ResourceDictionary Source="/VisualizationControl;component/Styles/GeoFlowMetro.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="MainWindowStyle" TargetType="{x:Type local:ManageToursWindow}">
                <Setter Property="shell:WindowChrome.WindowChrome">
                    <Setter.Value>
                        <shell:WindowChrome CaptionHeight="26" CornerRadius="0" GlassFrameThickness="0,0,0,1"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TourDeleteButtonStyle" TargetType="{x:Type Button}"
             BasedOn="{StaticResource ChromeCloseButton}">
                <Style.Setters>
                    <Setter Property="UIElement.Visibility" Value="Hidden"/>
                </Style.Setters>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=TourButton}" Value="true">
                        <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsFocused, ElementName=TourButton}" Value="true">
                        <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsFocused, ElementName=TourDeleteButton}" Value="true">
                        <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <FrameworkElement.Resources>
            <Style x:Key="NewTourButtonStyle" TargetType="{x:Type Button}">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Height" Value="40"/>
                    <Setter Property="FrameworkElement.Width" Value="40"/>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="Stroke" Storyboard.TargetProperty="Color" To="#40217346" Duration="0"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="Stroke" Storyboard.TargetProperty="Color" To="#80217346" Duration="0"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid>
                                        <ContentPresenter/>
                                        <Ellipse>
                                            <Shape.Fill>
                                                <SolidColorBrush x:Name="Stroke" Color="Transparent"/>
                                            </Shape.Fill>
                                        </Ellipse>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
            <ContextMenu x:Key="ManageTourContextMenu"
                   DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="{Binding}"/>
            </ContextMenu>
        </FrameworkElement.Resources>
        <Grid Row="0" HorizontalAlignment="Right" VerticalAlignment="Top"
          shell:WindowChrome.IsHitTestVisibleInChrome="true">
            <Button Click="Close_Click" x:Name="CloseButton" AutomationProperties.AutomationId="CloseButton"
              Style="{StaticResource ChromeCloseButton}" Margin="0,0,0,16" TabIndex="3"
              ToolTip="{x:Static local:Resources.ManageToursWindow_CloseTooltip}"
              AutomationProperties.Name="{x:Static local:Resources.ManageToursWindow_CloseTooltip}"
              AutomationProperties.HelpText="{x:Static local:Resources.NarratorTourManager_Close}"/>
        </Grid>
        <TextBlock x:Name="LaunchGeoFlowTextBlock" AutomationProperties.AutomationId="LaunchGeoFlowTextBlock"
               Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,8,0,16"
               Text="{x:Static local:Resources.ManageDialogTitle}" FontSize="19" FontFamily="Segoe UI Semilight"
               Foreground="Green"/>
        <ScrollViewer x:Name="TourListScrollViewer" Grid.Row="1" Margin="6" VerticalScrollBarVisibility="Auto"
                  PanningMode="VerticalOnly">
            <ItemsControl x:Name="TourListItemsControl" KeyboardNavigation.IsTabStop="false"
                    KeyboardNavigation.DirectionalNavigation="Continue" KeyboardNavigation.TabNavigation="Continue"
                    ToolTip="{x:Static local:Resources.ManageToursWindow_TourTooltip}" ItemsSource="{Binding Tours}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Name="TourButton" AutomationProperties.AutomationId="TourButton"
                    HorizontalContentAlignment="Stretch" TabIndex="1" BorderBrush="Transparent"
                    Style="{DynamicResource BorderlessButton}" Command="{Binding OpenCommand}"
                    AutomationProperties.Name="{Binding Name, StringFormat={x:Static local:Resources.NarratorTourManager_tour}}">
                            <FrameworkElement.ContextMenu>
                                <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem AutomationProperties.AutomationId="OpenCommand" Header="{x:Static local:Resources.OpenCommand}"
                            Command="{Binding OpenCommand}"/>
                                    <MenuItem AutomationProperties.AutomationId="PlayCommand" Header="{x:Static local:Resources.PlayCommand}"
                            Command="{Binding PlayCommand}"/>
                                    <MenuItem AutomationProperties.AutomationId="DeleteCommand" Header="{x:Static local:Resources.DeleteCommand}"
                            Command="{Binding DeleteCommand}"/>
                                    <MenuItem AutomationProperties.AutomationId="DuplicateCommand"
                            Header="{x:Static local:Resources.DuplicateCommand}" Command="{Binding DuplicateCommand}"/>
                                </ContextMenu>
                            </FrameworkElement.ContextMenu>
                            <Grid Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="32"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Margin="2" HorizontalAlignment="Left" BorderThickness="2">
                                    <FrameworkElement.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Style.Setters>
                                                <Setter Property="Border.BorderBrush" Value="Blue"/>
                                            </Style.Setters>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsOpened}" Value="true">
                                                    <Setter Property="Border.BorderBrush" Value="#439467"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsOpened}" Value="false">
                                                    <Setter Property="Border.BorderBrush" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FrameworkElement.Style>
                                    <Image x:Name="TourImage" Width="159" Height="87.75" Source="{Binding Image}"/>
                                </Border>
                                <StackPanel Grid.Column="1" Margin="12,0,0,0">
                                    <Grid>
                                        <TextBlock x:Name="textblock0" Text="{x:Static local:Resources.ManageDialogSwitchTo}">
                      <FrameworkElement.Style>
                        <Style TargetType="{x:Type TextBlock}">
                          <Style.Setters>
                            <Setter Property="UIElement.Visibility" Value="Hidden"/>
                          </Style.Setters>
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=TourButton}" Value="true">
                              <Setter Property="UIElement.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=TourButton}" Value="true">
                              <Setter Property="UIElement.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=TourDeleteButton}" Value="true">
                              <Setter Property="UIElement.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsWindowOpened}" Value="false">
                              <Setter Property="UIElement.Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsOpened}" Value="true">
                              <Setter Property="UIElement.Visibility" Value="Hidden"/>
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </FrameworkElement.Style>
                                        </TextBlock>
                                        <TextBlock x:Name="textblock1" Text="{x:Static local:Resources.ManageDialogOpen}" FontWeight="ExtraBold">
                      <FrameworkElement.Style>
                        <Style TargetType="{x:Type TextBlock}">
                          <Style.Setters>
                            <Setter Property="FrameworkElement.Margin" Value="0,0,0,6"/>
                            <Setter Property="UIElement.Visibility" Value="Hidden"/>
                          </Style.Setters>
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=TourButton}" Value="true">
                              <Setter Property="UIElement.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=TourButton}" Value="true">
                              <Setter Property="UIElement.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=TourDeleteButton}" Value="true">
                              <Setter Property="UIElement.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsWindowOpened}" Value="true">
                              <Setter Property="UIElement.Visibility" Value="Hidden"/>
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </FrameworkElement.Style>
                                        </TextBlock>
                                        <TextBlock x:Name="textblock2" Text="{x:Static local:Resources.ManageDialogCurrentlyOpen}"
                               Visibility="{Binding IsOpened, Converter={StaticResource HiddenIfFalseConverter}}"/>
                                    </Grid>
                                    <Grid>
                                        <TextBlock AutomationProperties.AutomationId="TourNameTextBlock" TextWrapping="Wrap" Text="{Binding Name}"/>
                                        <TextBlock AutomationProperties.AutomationId="NoTourNameTextBlock"
                               Text="{x:Static local:Resources.NoTourName}">
                      <FrameworkElement.Style>
                        <Style TargetType="{x:Type TextBlock}">
                          <Style.Setters>
                            <Setter Property="UIElement.Visibility" Value="Hidden"/>
                          </Style.Setters>
                          <Style.Triggers>
                            <DataTrigger Value="{x:Static sys:String.Empty}" Binding="{Binding Name}">
                              <Setter Property="UIElement.Visibility" Value="Visible"/>
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </FrameworkElement.Style>
                                        </TextBlock>
                                    </Grid>
                                </StackPanel>
                                <Button x:Name="TourDeleteButton" Margin="0,-4,0,0" AutomationProperties.AutomationId="TourDeleteButton"
                        Grid.Column="2" Style="{StaticResource TourDeleteButtonStyle}" VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        ToolTip="{x:Static local:Resources.ManageToursWindow_DeleteTourTooltip}"
                        Command="{Binding DeleteCommand}"
                        AutomationProperties.Name="{Binding Name, StringFormat={x:Static local:Resources.NarratorTourManager_Delete}}"/>
                            </Grid>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Button x:Name="NewTourButton" AutomationProperties.AutomationId="NewTourButton"
              Style="{StaticResource NewTourButtonStyle}" Margin="24,8,8,8" TabIndex="2"
              ToolTip="{x:Static local:Resources.ManageToursWindow_NewTourTooltip}"
              AutomationProperties.Name="{x:Static local:Resources.ManageDialogNewTourButton}"
              Command="{Binding NewTourCommand}">
                <Image Source="/VisualizationControl;component/Images/os_nav_zoom_in.png"/>
            </Button>
            <TextBlock Text="{x:Static local:Resources.ManageDialogNewTourButton}" VerticalAlignment="Center"/>
        </StackPanel>
    </Grid>
</Window>